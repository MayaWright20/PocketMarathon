if (startRunIntervalsArr[counter]?.DISTANCE?.END_ON_DISTANCE || startRunIntervalsArr[counter]?.intervalType === 'SPEED_DISTANCE') {
  //distance interval
  async function getCurrentPosition() {
      let { status } = await Location.requestForegroundPermissionsAsync();
      if (status !== 'granted') {
          setErrorMsg('Permission to access location was denied');
          return;
      };

      let location = await Location.getCurrentPositionAsync({
          accuracy: Location.Accuracy.BestForNavigation,
      });

      if (!pass) {
          setPass(true);
          setWatchPosition({ longitude: location.coords.longitude, latitude: location.coords.latitude });
      } else {
          setPrevLocation(location && { longitude: location.coords.longitude, latitude: location.coords.latitude });
      };
  };

  getCurrentPosition();

  let distance = 0;
  if (watchPosition && prevLocation) distance = haversine(watchPosition, prevLocation);